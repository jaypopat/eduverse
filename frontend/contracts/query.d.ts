// Generated by dedot cli

import type { GenericSubstrateApi } from "dedot/types";
import type { BytesLike, Result, AccountId32Like } from "dedot/codecs";
import type {
  GenericContractQuery,
  GenericContractQueryCall,
  ContractCallOptions,
  GenericContractCallResult,
  ContractCallResult,
} from "dedot/contracts";
import type {
  ContractsEduverseError,
  InkPrimitivesLangError,
  ContractsEduverseCourse,
} from "./types";

export interface ContractQuery<ChainApi extends GenericSubstrateApi>
  extends GenericContractQuery<ChainApi> {
  /**
   *
   * @param {BytesLike} title
   * @param {BytesLike} description
   * @param {number} maxStudents
   * @param {bigint} startTime
   * @param {bigint} endTime
   * @param {bigint} price
   * @param {BytesLike} metadataHash
   * @param {ContractCallOptions} options
   *
   * @selector 0xc75902bc
   **/
  createCourse: GenericContractQueryCall<
    ChainApi,
    (
      title: BytesLike,
      description: BytesLike,
      maxStudents: number,
      startTime: bigint,
      endTime: bigint,
      price: bigint,
      metadataHash: BytesLike,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<number, ContractsEduverseError>,
        ContractCallResult<ChainApi>
      >
    >
  >;

  /**
   *
   * @param {number} courseId
   * @param {ContractCallOptions} options
   *
   * @selector 0x8c18306a
   **/
  enroll: GenericContractQueryCall<
    ChainApi,
    (
      courseId: number,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<[], ContractsEduverseError>,
        ContractCallResult<ChainApi>
      >
    >
  >;

  /**
   * Verify if a student is enrolled in a course
   *
   * @param {AccountId32Like} student
   * @param {number} courseId
   * @param {ContractCallOptions} options
   *
   * @selector 0x4b7c20d8
   **/
  verifyEnrollment: GenericContractQueryCall<
    ChainApi,
    (
      student: AccountId32Like,
      courseId: number,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<boolean, ContractCallResult<ChainApi>>
    >
  >;

  /**
   * Get course details
   *
   * @param {number} courseId
   * @param {ContractCallOptions} options
   *
   * @selector 0x2553bbb2
   **/
  getCourse: GenericContractQueryCall<
    ChainApi,
    (
      courseId: number,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        ContractsEduverseCourse | undefined,
        ContractCallResult<ChainApi>
      >
    >
  >;

  /**
   * Get student's enrolled courses
   *
   * @param {AccountId32Like} student
   * @param {ContractCallOptions} options
   *
   * @selector 0xd7691439
   **/
  getStudentCourses: GenericContractQueryCall<
    ChainApi,
    (
      student: AccountId32Like,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<Array<number>, ContractCallResult<ChainApi>>
    >
  >;

  /**
   * Get teacher's courses
   *
   * @param {AccountId32Like} teacher
   * @param {ContractCallOptions} options
   *
   * @selector 0x2e80cb06
   **/
  getTeacherCourses: GenericContractQueryCall<
    ChainApi,
    (
      teacher: AccountId32Like,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<Array<number>, ContractCallResult<ChainApi>>
    >
  >;

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xe187628f
   **/
  getAllCourses: GenericContractQueryCall<
    ChainApi,
    (
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Array<ContractsEduverseCourse>,
        ContractCallResult<ChainApi>
      >
    >
  >;
}
